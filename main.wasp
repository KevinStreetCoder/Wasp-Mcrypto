app MCrpto {
  wasp: {
    version: "^0.11.1"
  },
  title: "MCrpto",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int       @id @default(autoincrement())
    username String    @unique
    password String
    balances Balance[]
psl=}

entity Balance {=psl
    id     Int   @id @default(autoincrement())
    amount Float
    userId Int
    user   User  @relation(fields: [userId], references: [id])
psl=}

action sendBitcoin {
  fn: import { sendBitcoin } from "@server/actions.js",
  entities: [User, Balance]
}

action addBitcoin {
  fn: import { addBitcoin } from "@server/actions.js",
  entities: [User, Balance]
}

query getBalance {
  fn: import { getBalance } from "@server/queries.js",
  entities: [User, Balance]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: true
}
